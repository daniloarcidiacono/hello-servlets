<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--
    The purpose of the ContextLoaderListener is two-fold:

        1. to tie the lifecycle of the ApplicationContext to the lifecycle
        of the ServletContext;

        2. to automate the creation of the ApplicationContext, so you
        don't have to write explicit code to do create it -
        it's a convenience function.

    -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- If you don't specify the contextConfigLocation context parameter, the ContextLoaderListener will look for a
        file called /WEB-INF/applicationContext.xml to load.
        Once the context files are loaded, Spring creates a WebApplicationContext object based on the bean definitions and
        stores it in the ServletContext of one's web application. -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/spring/applicationContext.xml</param-value>
    </context-param>

    <context-param>
        <param-name>spring.profiles.active</param-name>
        <param-value>mongodb</param-value>
    </context-param>

    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <!--

                By default the DispatcherServlet will load a xml file named [servlet-name]-servlet.xml.
                This is when no init-param named contextConfigLocation is defined.
                However in your case there is an init-param named contextConfigLocation defined, which tells the DispatcherServlet
                to load nothing but only delegate to the parent context (the one loaded by the ContextLoaderListener).

                If an application context hierarchy is not required, applications may configure a “root” context only and leave the
                contextConfigLocation Servlet parameter empty.
        -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value></param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
</web-app>
